/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.example.Gui.Arbait;

import org.example.Gui.Arbait.Model.ModelMarshrut1;
import org.example.Gui.Form.Helps.FGetDate;
import org.example.Gui.Form.Report.LReport;
import org.example.Gui.THaupt;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.example.logic.ZadachaKomplektovka;
import org.example.logic.ZadachaKomplektovkaPretenzia;
import org.example.util.DateRenderer;
import org.example.util.HelpClass;
import org.example.util.IOOperator;
import org.example.util.IORabotnikOperation;
import org.example.util.IOZadachaKomplektovka;
import org.example.util.IOZadachaKomplektovkaPretenzia;

/**
 *
 * @author ivan
 * Список маршрутов
 */
public class LMarshrut1 extends javax.swing.JPanel {

    /**
     * Creates new form LMarshrut
     * @param th1
     * @param stat - статус -1 все
     */
    public LMarshrut1(THaupt th1, int stat) {
        initComponents();
        th = th1;
        //status = stat;
        jButton3.setVisible(false);
        Calendar c = Calendar.getInstance();
        c.add(Calendar.DAY_OF_MONTH, 10);
        d2 = c.getTime();
        c.add(Calendar.DAY_OF_MONTH, -90);
        d1 = c.getTime();
        jLabel1.setText("");
    }

    THaupt th;
    //int status;
    ModelMarshrut1 model = new ModelMarshrut1();
    Integer[] status= new Integer[4];
    Date d1 = new Date();
    Date d2 = new Date();
    TableRowSorter<TableModel> sorter;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton6 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jButton7 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jButton8 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton13 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        jButton1.setText("Закрыть");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        jButton2.setText("Изменить");
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        jButton5.setText("Обновить");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filter.png"))); // NOI18N
        jButton12.setText("Фильтр");
        jButton12.setFocusable(false);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton12);
        jToolBar1.add(jSeparator4);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/forw.png"))); // NOI18N
        jButton3.setText("Отправить");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bac.png"))); // NOI18N
        jButton4.setText("Отменить отправку");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magn.png"))); // NOI18N
        jToggleButton1.setText("Все");
        jToggleButton1.setFocusable(false);
        jToggleButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton1);
        jToolBar1.add(jSeparator1);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Filled.png"))); // NOI18N
        jButton6.setText("Принять");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/basket.png"))); // NOI18N
        jButton9.setText("Отменить принятие");
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton9);

        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magn.png"))); // NOI18N
        jToggleButton2.setText("Все");
        jToggleButton2.setFocusable(false);
        jToggleButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton2);
        jToolBar1.add(jSeparator2);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/2.png"))); // NOI18N
        jButton7.setText("Отработать");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.png"))); // NOI18N
        jButton10.setText("Отменить отработку");
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton10);

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/question.png"))); // NOI18N
        jButton14.setText("Претензия");
        jButton14.setFocusable(false);
        jButton14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton14.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton14);

        jToggleButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magn.png"))); // NOI18N
        jToggleButton3.setText("Все");
        jToggleButton3.setFocusable(false);
        jToggleButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton3);
        jToolBar1.add(jSeparator3);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clos.png"))); // NOI18N
        jButton8.setText("На склад");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton8);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/work.png"))); // NOI18N
        jButton11.setText("Вернуть со склада");
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton11);

        jToggleButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magn.png"))); // NOI18N
        jToggleButton4.setText("Все");
        jToggleButton4.setFocusable(false);
        jToggleButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton4);

        jCheckBox1.setText("Принятые");
        jCheckBox1.setToolTipText("Принятые");
        jCheckBox1.setFocusable(false);
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jCheckBox1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jCheckBox1);

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print.png"))); // NOI18N
        jButton13.setText("Печать");
        jButton13.setFocusable(false);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton13);

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/redo.png"))); // NOI18N
        jButton15.setText("Перебросить");
        jButton15.setFocusable(false);
        jButton15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton15.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton15);

        jLabel1.setText("jLabel1");
        jToolBar1.add(jLabel1);

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(26);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTable1ComponentResized(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1238, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        th.closeTabPage();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentResized
        // TODO add your handling code here:
        if(jTable1.getColumnCount()<=0)
            return;
        int h = (jTable1.getWidth()-910)/2;
        
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(30);          
        
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(h);  
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);          
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(h);  
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(50);  
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(100); 
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(100);  
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(100);  
        jTable1.getColumnModel().getColumn(9).setPreferredWidth(50);  
        jTable1.getColumnModel().getColumn(10).setPreferredWidth(50);  
        jTable1.getColumnModel().getColumn(11).setPreferredWidth(50); 
        jTable1.getColumnModel().getColumn(12).setPreferredWidth(50); 
        jTable1.getColumnModel().getColumn(13).setPreferredWidth(50); 
        jTable1.getColumnModel().getColumn(14).setPreferredWidth(50);  
        jTable1.getColumnModel().getColumn(15).setPreferredWidth(100);  
        
        jTable1.getColumnModel().getColumn(16).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(16).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(16).setMinWidth(0);
        jTable1.getColumnModel().getColumn(17).setPreferredWidth(30);  
        
        jTable1.getColumnModel().getColumn(18).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(18).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(18).setMinWidth(0);
        
    }//GEN-LAST:event_jTable1ComponentResized

    boolean fv = true;
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:        
        if(fv)
        {
        // права пользователя
        status[0] = 0;
        status[1] = 0;
        status[2] = 0;
        status[3] = 0;
        
        jButton3.setVisible(false);
        jButton4.setVisible(false);
        //jButton5.setVisible(false);
        jButton6.setVisible(false);
        jButton7.setVisible(false);
        jButton8.setVisible(false);
        jButton9.setVisible(false);
        jButton10.setVisible(false);
        jButton11.setVisible(false);        
        jButton14.setVisible(false);
        jToggleButton1.setVisible(false);
        jToggleButton2.setVisible(false);
        jToggleButton3.setVisible(false);
        jToggleButton4.setVisible(false);
        jCheckBox1.setVisible(false);
        
        //видимость только для оператора
        jButton15.setVisible(IOOperator.operator.getOperator()==1);
        
        
        // Отправка маршрутов в цех
        if(IOOperator.getSetupOperator(9)>0)
        {
            status[0] = 1;            
            jToggleButton1.setVisible(true);
        }
        if(IOOperator.getSetupOperator(9)>1)
        {
            status[1] = 1;
            jButton4.setVisible(true);
            jToggleButton1.setVisible(true);
        }
        
        // Принятие маршрута в цех
        if(IOOperator.getSetupOperator(10)>0)
        {
            status[1] = 1;
            jToggleButton2.setVisible(true);
            jToggleButton1.setVisible(true);
        }
        if(IOOperator.getSetupOperator(10)>1)
        {
            status[0] = 1;
            status[1] = 1;
            //status[2] = 1;
            jButton6.setVisible(true);
            jButton9.setVisible(true);
            jToggleButton2.setVisible(true);
            jToggleButton1.setVisible(true);
        }
        
        // Отработака маршрута в цехе
        if(IOOperator.getSetupOperator(11)>0)
        {
            status[2] = 1;
            jToggleButton3.setVisible(true);
        }
        if(IOOperator.getSetupOperator(11)>1)
        {            
            status[1] = 1;
            status[2] = 1;
            status[3] = 1;
            jButton7.setVisible(true);
            jButton10.setVisible(true);
            jToggleButton3.setVisible(true);
            jButton14.setVisible(true);
            jCheckBox1.setVisible(true);
            jToggleButton4.setVisible(true);
        }
        
        // Принятие на склад
        if(IOOperator.getSetupOperator(12)>0)
        {
            status[3] = 1; 
            jToggleButton4.setVisible(true);
            jCheckBox1.setVisible(true);
        }
        if(IOOperator.getSetupOperator(12)>1)
        {            
            //status[1] = 1;
            status[2] = 1;
            status[3] = 1;
            jButton8.setVisible(true);
            jButton11.setVisible(true);
            jToggleButton4.setVisible(true);
            jCheckBox1.setVisible(true);
        }
        
        // Принятие маршрутов в цех
        /*if(IOOperator.getSetupOperator(10)>0)
        {
            status[0] = 3;
            status[1] = 4;
        }
        status[0] = 3;
        status[1] = 4;
        status[2] = -1;
        status[3] = -1;*/
        model.setData(d1, d2, status, jCheckBox1.isSelected());
        jTable1.setModel(model);
        jTable1.setShowGrid(true);                    
        jTable1.getTableHeader().setReorderingAllowed(false);  
        jTable1.getColumnModel().getColumn(1).setCellRenderer(model.jTableRenderer1);
        jTable1.getColumnModel().getColumn(2).setCellRenderer(jTableRenderer);
        jTable1.getColumnModel().getColumn(17).setCellRenderer(model.jTableRenderer2);
        jTable1.getColumnModel().getColumn(3).setCellRenderer(new DateRenderer());
        jTable1.getColumnModel().getColumn(6).setCellRenderer(new DateRenderer());
        jTable1.getColumnModel().getColumn(7).setCellRenderer(new DateRenderer());
        jTable1.getColumnModel().getColumn(8).setCellRenderer(new DateRenderer());
        jTable1.getColumnModel().getColumn(15).setCellRenderer(new DateRenderer());
        
        jTable1.getColumnModel().getColumn(5).setCellRenderer(HelpClass.jTableRendererColumnRight);
        jTable1.getColumnModel().getColumn(9).setCellRenderer(HelpClass.jTableRendererColumnRight);
        jTable1.getColumnModel().getColumn(10).setCellRenderer(HelpClass.jTableRendererColumnRight);
        jTable1.getColumnModel().getColumn(11).setCellRenderer(HelpClass.jTableRendererColumnRight);
        jTable1.getColumnModel().getColumn(12).setCellRenderer(HelpClass.jTableRendererColumnRight);
        jTable1.getColumnModel().getColumn(13).setCellRenderer(HelpClass.jTableRendererColumnRight);
        jTable1.getColumnModel().getColumn(14).setCellRenderer(HelpClass.jTableRendererColumnRight);
        
        jTable1ComponentResized(null);
        sorter = new TableRowSorter<TableModel>(model);        
        jTable1.setRowSorter(sorter);
        fv = false;
        }
        jTable1.requestFocusInWindow();
        
    }//GEN-LAST:event_formComponentShown

    
    
    public DefaultTableCellRenderer jTableRenderer = new DefaultTableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel cell = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            cell.setToolTipText((String) jTable1.getValueAt(row, 18));
            return cell;
        }

    };
    
    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1) return;
        FMarshrut m = new FMarshrut(null, true, (int)jTable1.getValueAt(h, 0));
        m.setVisible(true);
        model.setData(d1, d2, status, jCheckBox1.isSelected());
        jTable1.setRowSelectionInterval(h, h);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        model.setData(d1, d2, status, jCheckBox1.isSelected());
    }//GEN-LAST:event_jButton5ActionPerformed

    /***
     * Отправить маршрус
     * @param evt 
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        //h = (int) jTable1.getValueAt(h, 0);
        if (JOptionPane.showConfirmDialog(null, "Вы действительно хотите отправить маршрут <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + ">?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            ZadachaKomplektovka zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, (int)jTable1.getValueAt(jTable1.getSelectedRow(), 0)).get(0);
            
            if(zk.getChek().getRabotnikgruppa()==0 )
            {
                JOptionPane.showMessageDialog(null, "Выберите цех!");
                return;
            }
            
            if(zk.getStatus()!=2 )
            {
                JOptionPane.showMessageDialog(null, "Нельзя отправить маршрут!");
                return;
            }
            
            // проверим есть ли у изделия данной задачи операции
            if (zk.getChek().getRabotnikgruppa() != 1) {
                if (zk.getZadacha().getModel().getStatus() != 2) {
                    JOptionPane.showMessageDialog(null, "У конфекционной карты нет операций. Нельзя отправить маршрут в цех!");
                    return;
                }
            }
                
            if(IOZadachaKomplektovka.setStatusKomplektovka((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0), 3))
                model.setData(d1, d2, status, jCheckBox1.isSelected());
            else
                JOptionPane.showMessageDialog(null, "Ошибка отправки");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * принять в цех
     * @param evt 
     */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        //h = (int) jTable1.getValueAt(h, 0);
        if (JOptionPane.showConfirmDialog(null, "Вы действительно хотите принять маршрут <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + "> в цех?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            ZadachaKomplektovka zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, (int)jTable1.getValueAt(jTable1.getSelectedRow(), 0)).get(0);
            
            if(zk.getStatus()!=3 )
            {
                JOptionPane.showMessageDialog(null, "Нельзя принять маршрут!");
                return;
            }
                
            if(IOZadachaKomplektovka.setStatusKomplektovka((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0), 4))
            {
                model.setData(d1, d2, status, jCheckBox1.isSelected());
                jTable1.setRowSelectionInterval(h, h);
            }
            else
                JOptionPane.showMessageDialog(null, "Ошибка получения");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        //h = (int) jTable1.getValueAt(h, 0);
        if (JOptionPane.showConfirmDialog(null, "Вы действительно хотите отметить маршрут <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + "> как выполненный?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            ZadachaKomplektovka zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, (int)jTable1.getValueAt(jTable1.getSelectedRow(), 0)).get(0);
            
            if(zk.getStatus()!=4 )
            {
                JOptionPane.showMessageDialog(null, "Нельзя отметить маршрут как выполненный!");
                return;
            }
            
            // отметим все операции по данному маршруту как закрытые            
            if(IOZadachaKomplektovka.setStatusKomplektovka((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0), 5))
            {
                IOZadachaKomplektovka.setCloseRabontikOperationForMarshrut((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0));
                model.setData(d1, d2, status, jCheckBox1.isSelected());
                jTable1.setRowSelectionInterval(h, h);
            }
            else
                JOptionPane.showMessageDialog(null, "Ошибка выполнения");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /***
     * принять на склад
     * @param evt 
     */
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        //h = (int) jTable1.getValueAt(h, 0);
        if (JOptionPane.showConfirmDialog(null, "Вы действительно хотите принять товар из маршрута <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + "> на склад?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            ZadachaKomplektovka zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, (int)jTable1.getValueAt(jTable1.getSelectedRow(), 0)).get(0);
            
            if(zk.getStatus()!=5 )
            {
                JOptionPane.showMessageDialog(null, "Нельзя отметить маршрут как принятый на склад!");
                return;
            }
                
            if(IOZadachaKomplektovka.setStatusKomplektovka((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0), 6))
            {
                model.setData(d1, d2, status, jCheckBox1.isSelected());
                jTable1.setRowSelectionInterval(h, h);
            }
            else
                JOptionPane.showMessageDialog(null, "Ошибка выполнения");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * Отменить отправку
     * @param evt 
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        String sd;
        
        
        sd = "Вы действительно хотите вернуть маршрут <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + ">?";
                
        if (JOptionPane.showConfirmDialog(null, sd, "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            ZadachaKomplektovka zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, (int)jTable1.getValueAt(jTable1.getSelectedRow(), 0)).get(0);
            
            if(zk.getStatus()!=3 )
            {
                JOptionPane.showMessageDialog(null, "Нельзя вернуть маршрут!");
                return;
            }
            // удалим претензию
            IOZadachaKomplektovkaPretenzia.delPretenzia(IOZadachaKomplektovkaPretenzia.getPretenziaForZadachaKomplektovka((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0)));
            
            if(IOZadachaKomplektovka.setStatusKomplektovka((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0), 2))
                model.setData(d1, d2, status, jCheckBox1.isSelected());
            else
                JOptionPane.showMessageDialog(null, "Ошибка выполнения");
        }
       
        
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * Отменить принятие в цех
     * @param evt 
     */
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        String sd;
        
        
        sd = "Вы действительно хотите отменить принятие маршрута <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + ">?";
                
        if (JOptionPane.showConfirmDialog(null, sd, "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            ZadachaKomplektovka zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, (int)jTable1.getValueAt(jTable1.getSelectedRow(), 0)).get(0);
            
            if(zk.getStatus()!=4 )
            {
                JOptionPane.showMessageDialog(null, "Нельзя вернуть маршрут!");
                return;
            }
            //если принят в цех и хотим вернуть то проверим что нет операций
            if(zk.getStatus()==4)
            {
                if(!IORabotnikOperation.getListRabotnikOperationForKomplektovka(zk.getZadachakomplektovka()).isEmpty())
                {
                    JOptionPane.showMessageDialog(null, "По данному маршруту уже есть выполненные работы!");
                    return;
                }
            }
                
            if(IOZadachaKomplektovka.setStatusKomplektovka((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0), 3))
            {
                model.setData(d1, d2, status, jCheckBox1.isSelected());
                jTable1.setRowSelectionInterval(h, h);
            }
            else
                JOptionPane.showMessageDialog(null, "Ошибка выполнения");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * Отменить отработку в цеху
     * @param evt 
     */
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        String sd;
        
        
        sd = "Вы действительно хотите отменить отработку маршрута <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + ">?";
                
        if (JOptionPane.showConfirmDialog(null, sd, "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            ZadachaKomplektovka zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, (int)jTable1.getValueAt(jTable1.getSelectedRow(), 0)).get(0);
            
            if(zk.getStatus()!=5 )
            {
                JOptionPane.showMessageDialog(null, "Нельзя отменить маршрут!");
                return;
            }
            
                
            if(IOZadachaKomplektovka.setStatusKomplektovka((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0), 4))
            {
                IOZadachaKomplektovka.setOpenRabontikOperationForMarshrut((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0));
                model.setData(d1, d2, status, jCheckBox1.isSelected());
                jTable1.setRowSelectionInterval(h, h);
            }
            else
                JOptionPane.showMessageDialog(null, "Ошибка выполнения");
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * вернуть со склада
     * @param evt 
     */
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        String sd;
        
        
        sd = "Вы действительно хотите отменить принятие на склад маршрута <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + ">?";
                
        if (JOptionPane.showConfirmDialog(null, sd, "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            ZadachaKomplektovka zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, (int)jTable1.getValueAt(jTable1.getSelectedRow(), 0)).get(0);
            
            if(zk.getStatus()!=6 )
            {
                JOptionPane.showMessageDialog(null, "Нельзя отменить маршрут!");
                return;
            }
            
            // если принят в склад то проверим что задача не закрыта
            if(zk.getZadacha().getStatus()==10)
            {
                if(zk.getZadacha().getDel()!=2)
                {
                    JOptionPane.showMessageDialog(null, "Задача уже закрыта. Нельзя отменить маршрут!");
                    return;
                }
            }
            
                
            if(IOZadachaKomplektovka.setStatusKomplektovka((int)jTable1.getValueAt(jTable1.getSelectedRow(), 0), 5))
            {
                model.setData(d1, d2, status, jCheckBox1.isSelected());
                jTable1.setRowSelectionInterval(h, h);
            }
            else
                JOptionPane.showMessageDialog(null, "Ошибка выполнения");
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        FGetDate fg = new FGetDate(null, true, d1, d2);
        fg.setVisible(true);
        if(fg.getResult())
        {
            d1 = fg.getDate1();
            d2 = fg.getDate2();
            model.setData(d1, d2, status, jCheckBox1.isSelected());
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRow()==-1) return;
        LReport lr = new LReport(null, true, 7,(int)jTable1.getValueAt(jTable1.getSelectedRow(), 0));
        lr.setVisible(true);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        switch(evt.getKeyCode())
        {
            // удалить значение
            
            case KeyEvent.VK_ESCAPE:
            {
                jLabel1.setText("");                
                setFilter();
                break;
            }                  
            case KeyEvent.VK_BACK_SPACE:
            {
                jLabel1.setText(jLabel1.getText().substring(0, (jLabel1.getText().length()-1)>0?(jLabel1.getText().length()-1):0));                
                setFilter();
                break;
            }            
            default:
                //if(String.valueOf(evt.getKeyChar()).matches("[0-9а-яА-Яa-zA-Z-\\s\\w]"))                
                if(String.valueOf(evt.getKeyChar()).matches("[A-Za-zА-Яа-я0-9/]"))                
                {
                    jLabel1.setText(jLabel1.getText()+evt.getKeyChar());
                    setFilter();                    
                }                 
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        if(jToggleButton1.isSelected())
        {
            jToggleButton2.setSelected(false);
            jToggleButton3.setSelected(false);
            jToggleButton4.setSelected(false);
            sorter.setRowFilter(RowFilter.regexFilter("(?iu)", 2));
            sorter.setRowFilter(RowFilter.regexFilter("(?iu)3", 1));
        }
        else
            setFilter();
            
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        if(jToggleButton2.isSelected())
        {
            jToggleButton1.setSelected(false);
            jToggleButton3.setSelected(false);
            jToggleButton4.setSelected(false);
            sorter.setRowFilter(RowFilter.regexFilter("(?iu)", 2));
            sorter.setRowFilter(RowFilter.regexFilter("(?iu)4", 1));
        }
        else
            setFilter();
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
        if(jToggleButton3.isSelected())
        {
            jToggleButton2.setSelected(false);
            jToggleButton1.setSelected(false);
            jToggleButton4.setSelected(false);
            sorter.setRowFilter(RowFilter.regexFilter("(?iu)", 2));
            sorter.setRowFilter(RowFilter.regexFilter("(?iu)5", 1));
        }
        else
            setFilter();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // TODO add your handling code here:
        if(jToggleButton4.isSelected())
        {
            jToggleButton2.setSelected(false);
            jToggleButton3.setSelected(false);
            jToggleButton1.setSelected(false);
            sorter.setRowFilter(RowFilter.regexFilter("(?iu)", 2));
            sorter.setRowFilter(RowFilter.regexFilter("(?iu)6", 1));
        }
        else
            setFilter();
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
        jTable1.requestFocusInWindow();
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1) return;
        
        h = (int)jTable1.getValueAt(h, 0);
        ZadachaKomplektovka zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, h).get(0);        
        if(zk.getStatus()!=4)
        {
            JOptionPane.showMessageDialog(null, "У маршрута несоответствующий статус!");
            return;
        }
        
        ZadachaKomplektovkaPretenzia zp = IOZadachaKomplektovkaPretenzia.getPretenziaForZadachaKomplektovka(h);
        if(zp.getZkpretenzia()!=0)
        {
            if (JOptionPane.showConfirmDialog(null, "У данного маршрута уже есть претензия. Создать новую?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
            {
                FPretenzia fp = new FPretenzia(null, true, 0, h);
                fp.setVisible(true);                
                return;
            }            
            FPretenzia fp = new FPretenzia(null, true, zp.getZkpretenzia(), h);
            fp.setVisible(true);                
            return;
        }
        FPretenzia fp = new FPretenzia(null, true, 0, h);
        fp.setVisible(true);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)return;
        h = (int)jTable1.getValueAt(h, 0);
        ZadachaKomplektovka zk = IOZadachaKomplektovka.getZadachaKomplektovka(h);
        if(zk.getZadachakomplektovka()!=0){
            if(zk.getStatus()>=3 && zk.getStatus()<=4){
                FMarshrutOtherChex fm = new FMarshrutOtherChex(null, true, h);
                fm.setVisible(true);                
                if(fm.getResult())
                    model.setData(d1, d2, status, jCheckBox1.isSelected());
            } else {
                JOptionPane.showMessageDialog(null, "Перемещать можно только отправленные и принятые маршруты!");                
            }
        }
        
    }//GEN-LAST:event_jButton15ActionPerformed

    private void setFilter()
    {
        sorter.setRowFilter(RowFilter.regexFilter("(?iu)"+jLabel1.getText(), 2));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
