/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.example.Gui.Arbait;

import org.example.Gui.Arbait.Model.ModelZadachaKomplektovka1;
import org.example.Gui.Form.Helps.FGetSclad;
import org.example.Gui.Form.Report.LReport;
import org.example.Gui.THaupt;
import java.awt.Component;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.example.logic.ZadachaKomplektovka;
import org.example.util.HelpClass;
import org.example.util.IOOperator;
import org.example.util.IOSclad;
import org.example.util.IOZLog;
import org.example.util.IOZadachaKomplektovka;

/**
 *
 * @author ivan
 */
public class LScladKroi extends javax.swing.JPanel {

    /**
     * Creates new form LScladKroi
     * @param th1
     */
    public LScladKroi(THaupt th1) {
        initComponents();
        th = th1;
        jLabel1.setText("");
        jButton2.setVisible(false);
        jButton4.setVisible(false);
        jButton6.setVisible(false);
        jButton7.setVisible(false);
    }
    
    THaupt th;
    ModelZadachaKomplektovka1 model = new ModelZadachaKomplektovka1();
    TableRowSorter<TableModel> sorter;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        jButton1.setText("Закрыть");
        jButton1.setToolTipText("Закрыть окно");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/catapult.png"))); // NOI18N
        jButton2.setText("В работу");
        jButton2.setToolTipText("Отправить маршрут в работу");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/2.png"))); // NOI18N
        jButton6.setText("Принять");
        jButton6.setToolTipText("Принять маршрут на склад кроя");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bac.png"))); // NOI18N
        jButton7.setText("Вернуть");
        jButton7.setToolTipText("Вернуть маршрут со склада кроя");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        jButton3.setText("Обновить");
        jButton3.setToolTipText("Обновить список");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cascade.png"))); // NOI18N
        jButton4.setText("МестоХранения");
        jButton4.setToolTipText("Изменить место хранения маршрута");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print.png"))); // NOI18N
        jButton5.setText("Печать");
        jButton5.setToolTipText("Выбрать форму для печати");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jLabel1.setText("jLabel1");
        jToolBar1.add(jLabel1);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(26);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTable1ComponentResized(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        th.closeTabPage();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentResized
        // TODO add your handling code here:
        if(jTable1.getColumnCount()<=0)
            return;
        int h = (jTable1.getWidth()-230)/5;
        
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(30);
        //jTable1.getColumnModel().getColumn(1).setMaxWidth(0);
        //jTable1.getColumnModel().getColumn(1).setMinWidth(0);
        
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(h);        
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(h);  
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(h);  
        
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);  
        
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(6).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(6).setMinWidth(0);
        
        
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(h);
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(80);       
        jTable1.getColumnModel().getColumn(9).setPreferredWidth(h);       
        
        jTable1.getColumnModel().getColumn(10).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(10).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(10).setMinWidth(0);
    }//GEN-LAST:event_jTable1ComponentResized

    
    public DefaultTableCellRenderer jTableRenderer = new DefaultTableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel cell = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            cell.setToolTipText((String) jTable1.getValueAt(row, 10));
            return cell;
        }

    };
    
    
    
    // подсветка и картинки в таблицу                       
    final ImageIcon s11 = new ImageIcon(getClass().getResource("/images/question.png"));
    final ImageIcon s12 = new ImageIcon(getClass().getResource("/images/bac.png"));
    final ImageIcon s13 = new ImageIcon(getClass().getResource("/images/2.png"));

    private final DefaultTableCellRenderer jTableRendererSt = new DefaultTableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel cell = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            if (column == 1) {
                switch (Integer.parseInt(cell.getText())) {
                    case 11:
                        cell.setIcon(s11);
                        cell.setText("");
                        cell.setToolTipText("В пути на склад кроя");
                        break;
                    case 13:
                        cell.setIcon(s13);
                        cell.setText("");
                        cell.setToolTipText("На складе");
                        break;
                    case 12:
                        cell.setIcon(s12);
                        cell.setText("");
                        cell.setToolTipText("Возврат со склада кроя");
                        break;    
                    
                }
            }
            return cell;
        }

    };
    
    
    boolean f = true;
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        if(f)
        {
            model.setDataForScladKroi();
            jTable1.setModel(model);
            jTable1.setShowGrid(true);
            jTable1.getTableHeader().setReorderingAllowed(false);            
            jTable1.getColumnModel().getColumn(8).setCellRenderer(HelpClass.jTableRendererColumnRight);
            jTable1.getColumnModel().getColumn(2).setCellRenderer(jTableRenderer);
            jTable1.getColumnModel().getColumn(1).setCellRenderer(jTableRendererSt);
            jTable1ComponentResized(null);
            f = false;
            jButton2.setVisible(IOOperator.getSetupOperator(71)==2);        
            
            jButton4.setVisible(IOOperator.getSetupOperator(65)==2);        
            jButton6.setVisible(IOOperator.getSetupOperator(65)==2);        
            jButton7.setVisible(IOOperator.getSetupOperator(65)==2);        
            
            sorter = new TableRowSorter<TableModel>(model);
            jTable1.setRowSorter(sorter);
            
            
        }
        jTable1.requestFocusInWindow();
    }//GEN-LAST:event_formComponentShown

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        model.setDataForScladKroi();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        h = (int) jTable1.getValueAt(h, 0);
        if (JOptionPane.showConfirmDialog(null, "Вы действительно хотите отправить комплектовку <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + "> в работу?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            ZadachaKomplektovka zz = IOZadachaKomplektovka.getListZadachaKomplektovka(0, h).get(0);
            if(zz.getStatus()<11)
            {                               
                return;
            }
            if(zz.getStatus()>12)
            {                               
                return;
            }
            
            if(IOZadachaKomplektovka.setStatusKomplektovkaGut(h, 1))
            {
                model.setDataForScladKroi();
                IOZLog.setZLog(zz.getZadacha().getZadacha(), zz.getZadachakomplektovka(), 3, "Вернули комплектовку в работу");
            }
            else
                JOptionPane.showMessageDialog(null, "Ошибка перемещения");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;

        ZadachaKomplektovka zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, (int)jTable1.getValueAt(h, 0)).get(0);
        
        FGetSclad fg = new FGetSclad(null, true, zk.getSclad().getSclad());
        fg.setVisible(true);
        if(fg.getResult())
        {
            zk = IOZadachaKomplektovka.getListZadachaKomplektovka(0, (int)jTable1.getValueAt(h, 0)).get(0);
            zk.setSclad(IOSclad.getListSclad(fg.getResultValue()).get(0));
            IOZadachaKomplektovka.setZadachaKomplektovka(zk);
            model.setDataForScladKroi();
            jTable1.setRowSelectionInterval(h, h);
            //dj.setSclad(IOSclad.getListSclad(fg.getResultValue()).get(0));
            //jTextField5.setText(dj.getSclad().getName());
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRow()==-1) return;
        LReport lr = new LReport(null, true, 19,(int)jTable1.getValueAt(jTable1.getSelectedRow(), 0));
        lr.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        switch(evt.getKeyCode())
        {
            // удалить значение
            
            case KeyEvent.VK_ESCAPE:
            {
                jLabel1.setText("");                
                setFilter();
                break;
            }                  
            case KeyEvent.VK_BACK_SPACE:
            {
                jLabel1.setText(jLabel1.getText().substring(0, (jLabel1.getText().length()-1)>0?(jLabel1.getText().length()-1):0));                
                setFilter();
                break;
            }            
            default:
                //if(String.valueOf(evt.getKeyChar()).matches("[0-9а-яА-Яa-zA-Z-\\s\\w]"))                
                if(String.valueOf(evt.getKeyChar()).matches("[A-Za-zА-Яа-я0-9/]"))                
                {
                    jLabel1.setText(jLabel1.getText()+evt.getKeyChar());
                    setFilter();                    
                }                 
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        
        int hh = h;
        h = (int) jTable1.getValueAt(h, 0);
        if (JOptionPane.showConfirmDialog(null, "Вы действительно хотите принять комплектовку <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + "> в склад кроя?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {        
            ZadachaKomplektovka zz = IOZadachaKomplektovka.getListZadachaKomplektovka(0, h).get(0);
            if(zz.getStatus()<11)
            {                
                return;
            }
            if(IOZadachaKomplektovka.setStatusKomplektovkaGut(h, 13))
            {
                IOZLog.setZLog(zz.getZadacha().getZadacha(), zz.getZadachakomplektovka(), 3, "Приняли комплектовку на склад кроя");
                model.setDataForScladKroi();
                jTable1.setRowSelectionInterval(hh, hh);
            }
            else
                JOptionPane.showMessageDialog(null, "Ошибка перемещения");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1)
            return;
        int hh = h;
        h = (int) jTable1.getValueAt(h, 0);
        if (JOptionPane.showConfirmDialog(null, "Вы действительно хотите вернуть комплектовку <" + jTable1.getValueAt(jTable1.getSelectedRow(), 2) + "> в работу?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            ZadachaKomplektovka zz = IOZadachaKomplektovka.getListZadachaKomplektovka(0, h).get(0);
            if(zz.getStatus()!=13)
            {                
                return;
            }
            if(IOZadachaKomplektovka.setStatusKomplektovkaGut(h, 12))
            {
                IOZLog.setZLog(zz.getZadacha().getZadacha(), zz.getZadachakomplektovka(), 3, "Вернули комплектовку со склада кроя");
                model.setDataForScladKroi();
                jTable1.setRowSelectionInterval(hh, hh);
            }
            else
                JOptionPane.showMessageDialog(null, "Ошибка перемещения");
        }
    }//GEN-LAST:event_jButton7ActionPerformed


    private void setFilter()
    {
        sorter.setRowFilter(RowFilter.regexFilter("(?iu)"+jLabel1.getText(), 4));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
