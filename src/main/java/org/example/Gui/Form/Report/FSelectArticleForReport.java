/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package org.example.Gui.Form.Report;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.example.dto.MegaReportDto;
import org.example.util.IOModel;
import org.example.util.IOZadacha;
import org.hibernate.mapping.Collection;

/**
 *
 * @author edovin.ivan
 */
public class FSelectArticleForReport extends javax.swing.JDialog {

    /**
     * Creates new form FSelectArticleForReport
     */
    public FSelectArticleForReport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jLabel1.setText("");
    }
    
    ModelSelectArticleForReport model = new ModelSelectArticleForReport();
    TableRowSorter<TableModel> sorter;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Выбор артикулов");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Выгрузить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(24);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTable1ComponentResized(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("jLabel1");

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Просмотр");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setText("Выделить все");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(0, 29, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentResized
        // TODO add your handling code here:
        if(jTable1.getColumnCount()<=0)
            return;
        int h = (jTable1.getWidth()-130)/3;
        
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(h);        
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(h);        
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);        
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(h);                
    }//GEN-LAST:event_jTable1ComponentResized

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        int w,h;
        w = Toolkit.getDefaultToolkit ().getScreenSize().width-20;
        h = Toolkit.getDefaultToolkit ().getScreenSize().height-20;
        setSize(w,h);   
        setLocationRelativeTo(null);        
        model.setData();
        jTable1.setModel(model);
        jTable1.setShowGrid(true);                    
        jTable1.getTableHeader().setReorderingAllowed(false);   
        jTable1ComponentResized(null);
        
        sorter = new TableRowSorter<TableModel>(model);
        jTable1.setRowSorter(sorter);
        
    }//GEN-LAST:event_formWindowOpened

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        switch(evt.getKeyCode())
        {
            // удалить значение
            
            case KeyEvent.VK_ESCAPE:
            {
                jLabel1.setText("");                
                setFilter();
                break;
            }                  
            case KeyEvent.VK_BACK_SPACE:
            {
                jLabel1.setText(jLabel1.getText().substring(0, (jLabel1.getText().length()-1)>0?(jLabel1.getText().length()-1):0));                
                setFilter();
                break;
            }            
            default:                
                if(String.valueOf(evt.getKeyChar()).matches("[A-Za-zА-Яа-я0-9/]"))                
                {
                    jLabel1.setText(jLabel1.getText()+evt.getKeyChar());
                    setFilter();                    
                }                 
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        sorter.setRowFilter(RowFilter.regexFilter("(?iu)"+true, 1));
        jLabel1.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    // выгрузить
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(model.getSelectArticle().isEmpty()){
            JOptionPane.showMessageDialog(null, "Выберите артикул");
            return;
        }
        JFileChooser jf = new JFileChooser();        
        if(jf.showSaveDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            try (PrintWriter outs = new PrintWriter(new OutputStreamWriter(new FileOutputStream(jf.getSelectedFile().getAbsolutePath()+".csv", false), "cp1251"), false)) {
                String head = "1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33";
                outs.println(head);
                head = "Артикул;Задача по артикулу (№);Вес 1 изделия -общий по задаче(кг);Средний вес 1 изделия без учёта минимального и максимального- общий по задаче(кг);Стоимость комплектовки 1 изделия(руб.);Дата задачи;Наличие принта;Стоимость принта(руб.);Кол-во деталей с принтом;Наличие вышивки;Стоимость вышивки(руб.);Швейный цех -Количество изделий, принятых на склад из швейного цеха(шт.);Швейный цех -Себестоимость 1 изделия по откомплектованным изделиям(руб.);Швейный цех -Себестоимость 1 изделия по принятым на склад(руб.);Итого - Себестоимость 1 изделия по откомплектованным изделиям(руб.);Итого - себестоимость 1 изделия по принятым на склад(руб.);Вес кроя в задаче(кг);Вес доп. артикула в задаче(кг);% доп. Артикула в задаче;Доп. Артикул;Вес отходов в задаче(кг);% отходов по задаче;Среднее значение % отходов по артикулу до задачи;Настилы по задаче;Вид настила;Вес 1 изделия - по настилу(кг);Вес кроя в настиле(кг);Вес доп. артикула в настиле(кг);% отходов доп. артикула в настиле;Вес отходов(кг) в настиле;% отходов по настилу;Сумма фурнитуры;Фурнитура";
                outs.println(head);
            
            List<Integer> lsZadacha;
                Map<String, List<BigDecimal>> map = new HashMap<>();
            List<MegaReportDto> allList = new ArrayList<>();
            for(String article_name: model.getSelectArticle()){
                for(Integer article: IOModel.getAllModelForArticle(article_name)){
                    lsZadacha  = IOZadacha.getListZadachaForArticle(article);
                    for(Integer z: lsZadacha){
                    
                        List<MegaReportDto> list =  IOZadacha.getListDtoMegaReportForZadacha(z);                    
                        allList.addAll(list);
                        if(map.containsKey(list.get(0).getFl1())){
                            List<BigDecimal> lv = new ArrayList<>(map.get(list.get(0).getFl1()));// list.get(0).getFl3()
                            lv.add(list.get(0).getFl3());
                            map.replace(list.get(0).getFl1(), lv);
                        } else {
                            map.put(list.get(0).getFl1(), Collections.singletonList(list.get(0).getFl3())); 
                        }
                    }            
                }
            }          
            Map<String, BigDecimal> mapn = new HashMap<>();
            map.forEach((index, values)->{
                values.sort((c1, c2)->{return c1.compareTo(c2);});
                if(values.size()<2){
                    mapn.put(index, values.get(0));
                }
                else{
                    mapn.put(index, values.get( (values.size()/2)-1 ));
                }                
            });
            
            allList.forEach(it->{
                it.setFL3_1(mapn.get(it.getFl1()));
                outs.println(it.toSaveFile());                
            });
            
            outs.close();
            
        } catch (UnsupportedEncodingException | FileNotFoundException ex) {
                    System.out.println("ERROR " + ex);
                }
        }
        setVisible(false);               
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        model.setAllEnable();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void setFilter()
    {
        sorter.setRowFilter(RowFilter.regexFilter("(?iu)"+jLabel1.getText(), 2));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FSelectArticleForReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FSelectArticleForReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FSelectArticleForReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FSelectArticleForReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FSelectArticleForReport dialog = new FSelectArticleForReport(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
