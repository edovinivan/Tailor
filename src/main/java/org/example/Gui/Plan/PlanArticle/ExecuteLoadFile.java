/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.example.Gui.Plan.PlanArticle;

import org.example.Gui.Form.Helps.FGetColor;
import org.example.Gui.Form.Helps.FGetModel;
import org.example.Gui.Form.Helps.FGetRazmeri;
import org.example.Gui.Plan.PlanArticle.Model.ModelExecuteLoadFile;
import java.awt.Component;
import java.awt.Toolkit;
import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import org.example.logic.Color;
import org.example.logic.Model;
import org.example.logic.Razmeri;
import org.example.logic.plan.MapArticleColorJoin;
import org.example.logic.plan.VidJoinArticleColor;
import org.apache.log4j.Logger;
import org.example.util.IOColor;
import org.example.util.IOModel;
import org.example.util.IORazmeri;
import org.example.util.IOZadachaKomplektovka;
import org.example.util.plannew.IOMapArticleColorJoin;



/**
 *
 * @author ivan
 * Форма для обработки данных загруженных из файлов импорта
 */
public class ExecuteLoadFile extends javax.swing.JDialog {

    private static final Logger log = Logger.getLogger(ExecuteLoadFile.class);
    private boolean result = false; 
    private ModelExecuteLoadFile model = new ModelExecuteLoadFile();
    
    
    // связывание размеров
    JoinRazmeriSize1C jr;
    // связывание артикулов
    JointArticle1C article1C;
    // связывание цветовж
    JoinColor1C color1C;
    
    JoinExceptionArticle exceptionArticle;
    
    /**
     * Creates new form ExecuteLoadFile
     * @param parent
     * @param modal
     */
    public ExecuteLoadFile(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public boolean isResult() {
        return result;
    }
    
    
    public List<ArticleLoad> getListArticleLoad(){
        return model.getListArticleLoad();
    }
    
    /**
     * Загрузка файла продаж
     * @param load_file
     * @return 
     */
    public boolean loadSaleFile(String load_file) {
        LoadFiles lf = new LoadFiles();
        
        if (lf.loadDataFromFileSale(load_file)) {      
            
            article1C = new JointArticle1C();
            article1C.joinStartArticle(lf.getArticleLoad());
            
            
            color1C = new JoinColor1C();
            color1C.joinColor(lf.getArticleLoad());
            
            
            jr = new JoinRazmeriSize1C();
            jr.joinRazmeri(lf.getArticleLoad());
            
            exceptionArticle = new JoinExceptionArticle();
            exceptionArticle.joinMapException(lf.getArticleLoad());
            
            AtomicInteger ai = new AtomicInteger(0);
            
            lf.getArticleLoad().stream()
                    .forEach(t->{
                        t.setId(ai.getAndIncrement());
                        if(t.getColor_id()!=0 && t.getModel_id()!=0 && t.getSizes_tid()!=0){
                            t.setCheck(1);
                            t.setStatus(1);
                        } else {
                            t.setCheck(0);
                            t.setStatus(0);
                        }
                            
                    });
            
            model.setDate(lf.getArticleLoad());
            
            
            
            
            
        }      
        return true;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Проверка данных");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        jButton1.setText("Закрыть");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/2.png"))); // NOI18N
        jButton2.setText("Принять");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-Needle_16.png"))); // NOI18N
        jButton3.setText("Артикул");
        jButton3.setToolTipText("Привязать артикул");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magn.png"))); // NOI18N
        jButton6.setText("Цвет");
        jButton6.setToolTipText("Привязать цвет");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/need.png"))); // NOI18N
        jButton9.setText("Размер");
        jButton9.setToolTipText("Привязать размер");
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton9);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/money.png"))); // NOI18N
        jButton4.setText("Продажи");
        jButton4.setToolTipText("Загрузить продажи из файла");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/redo.png"))); // NOI18N
        jButton5.setText("Остатки");
        jButton5.setToolTipText("Загрузить остатки из файла");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Filled.png"))); // NOI18N
        jButton7.setText("В работе");
        jButton7.setToolTipText("Загрузить артикула которые в работе");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/remove.png"))); // NOI18N
        jButton8.setText("Все");
        jButton8.setToolTipText("Снять выделение со всех строк");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton8);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/basket.png"))); // NOI18N
        jButton10.setText("ABC");
        jButton10.setToolTipText("Сортировать данные по ABC");
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton10);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/basket.png"))); // NOI18N
        jButton11.setText("Артикул");
        jButton11.setToolTipText("Сортировка по артикулу");
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton11);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Hand.png"))); // NOI18N
        jButton12.setText("Except");
        jButton12.setFocusable(false);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton12);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(26);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTable1ComponentResized(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:        
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    
   
    
    
    private void jTable1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentResized
        // TODO add your handling code here:
         if(jTable1.getColumnCount()<=0)
            return;
        int h = (jTable1.getWidth()-235)/6;
        
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(25);  
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(h);  
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(h);          
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(h); 
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(h/2); 
        
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(h); 
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(h); 
        jTable1.getColumnModel().getColumn(8).setPreferredWidth(h/2); 
        
        jTable1.getColumnModel().getColumn(9).setPreferredWidth(80); 
        jTable1.getColumnModel().getColumn(10).setPreferredWidth(80); 
        jTable1.getColumnModel().getColumn(11).setPreferredWidth(80); 
        
        jTable1.getColumnModel().getColumn(12).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(12).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(12).setMinWidth(0);
        
        jTable1.getColumnModel().getColumn(13).setPreferredWidth(50); 
        
        
        /*jTable1.getColumnModel().getColumn(13).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(13).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(13).setMinWidth(0);*/
        
    }//GEN-LAST:event_jTable1ComponentResized

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        int w = Toolkit.getDefaultToolkit ().getScreenSize().width-20;
        int h = Toolkit.getDefaultToolkit ().getScreenSize().height-100;
        setSize(w,h);              
        setLocationRelativeTo(null);
        
        
        jTable1.setModel(model);
        jTable1.setShowGrid(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1ComponentResized(null);
        
        jTable1.getColumnModel().getColumn(9).setCellRenderer(jTableRenderer1);
        jTable1.getColumnModel().getColumn(10).setCellRenderer(jTableRenderer1);
        jTable1.getColumnModel().getColumn(11).setCellRenderer(jTableRenderer1);
               
        
    }//GEN-LAST:event_formWindowOpened

    /**
     * Загрузить остатки из файла
     * @param evt 
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {

            LoadFiles lf = new LoadFiles();
            lf.loadDataFromFileBalance(fileChooser.getSelectedFile().getAbsolutePath());
            model.setDataBalanc(lf.getArticleLoad());
        }
        
        
        
        
        //lf.getArticleLoad().forEach(System.out::println);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1) return;
        FGetModel fg= new FGetModel(null, true, 0, false);        
        fg.setVisible(true);
        if(fg.getResult())
        {            
            Model mod = IOModel.getModel(fg.getResultValue());            
            model.updateArticle((int)jTable1.getValueAt(h, 0), mod.getModel(), mod.getArticle());
            
            //сохраним привязку в базу
            MapArticleColorJoin mj = new MapArticleColorJoin();
            mj.setMaparticlecolorjoin(0);
            mj.setV_ic((String)jTable1.getValueAt(h, 3));
            mj.setV_tailor(mod.getModel());
            mj.setVid(VidJoinArticleColor.ARTICLE);
            IOMapArticleColorJoin iOMapArticleColorJoin = new IOMapArticleColorJoin();
            iOMapArticleColorJoin.saveMapArticleColorJoin(mj);  
            
            jTable1.setRowSelectionInterval(h, h);
        }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1) return;
        FGetColor fg = new FGetColor(null, true, 0, 1);
        fg.setVisible(true);
        if(fg.getResult())
        {            
            Color col = IOColor.getListColor(fg.getResultValue(), 0).get(0);                        
            model.updateColor((int)jTable1.getValueAt(h, 0), col.getColor(), col.getName());
            //сохраним привязку в базу
            MapArticleColorJoin mj = new MapArticleColorJoin();
            mj.setMaparticlecolorjoin(0);
            mj.setV_ic((String)jTable1.getValueAt(h, 4));
            mj.setV_tailor(col.getColor());
            mj.setVid(VidJoinArticleColor.COLOR);
            IOMapArticleColorJoin iOMapArticleColorJoin = new IOMapArticleColorJoin();
            iOMapArticleColorJoin.saveMapArticleColorJoin(mj);            
            
            jTable1.setRowSelectionInterval(h, h);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * Продажи
     * @param evt 
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        if(fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){            
            if(!loadSaleFile(fileChooser.getSelectedFile().getAbsolutePath())){                                
                JOptionPane.showMessageDialog(null, "Ошибка загрузки файла!");
            }                   
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    
    boolean flag_inwork = true;
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Map<String, Integer> inWork = IOZadachaKomplektovka.getAllMarshrutForWork()
                .stream()
                .collect(Collectors.toMap(t->t.split("<->")[0], t-> { return flag_inwork?Integer.parseInt(t.split("<->")[1]):0; }, (t1, t2)->t1));
        model.addInWork(inWork);
        flag_inwork = !flag_inwork;
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * Принять 
     * @param evt 
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        result = true;
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        model.deselectAll();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
       
        if(evt.getClickCount()==2){
            // привязать артикул
            if(jTable1.getSelectedColumn()==6){
                if(jTable1.getSelectedRow()!=-1){
                    if(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString().isEmpty()){
                        jButton3ActionPerformed(null);
                    }
                }
            }
            // привязать цвет
            if(jTable1.getSelectedColumn()==7){
                if(jTable1.getSelectedRow()!=-1){
                    if(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString().isEmpty()){
                        jButton6ActionPerformed(null);
                    }
                }
            }
            
            // привязать размер
            if(jTable1.getSelectedColumn()==8){
                if(jTable1.getSelectedRow()!=-1){
                    if(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString().isEmpty()){
                        jButton9ActionPerformed(null);
                    }
                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h==-1) return;
        //если артикул еще не привязан то размер не привязывается
        if((int)jTable1.getValueAt(h, 13)==0) return;
            
        FGetRazmeri fg = new FGetRazmeri(null, true, 0, (int)jTable1.getValueAt(h, 13));
        fg.setVisible(true);
        if(fg.getResult())
        {
            Razmeri razmeri = IORazmeri.getListRazmeri(fg.getResultValue()).get(0);
            model.updateRazmeri((int)jTable1.getValueAt(h, 0), razmeri.getRazmeri(), razmeri.getName());
            
            //сохраним привязку в базу
            MapArticleColorJoin mj = new MapArticleColorJoin();
            mj.setMaparticlecolorjoin(0);
            mj.setV_ic((int)jTable1.getValueAt(h, 13) + "-" + (String)jTable1.getValueAt(h, 5));
            mj.setV_tailor(razmeri.getRazmeri());
            mj.setVid(VidJoinArticleColor.SIZE);
            IOMapArticleColorJoin iOMapArticleColorJoin = new IOMapArticleColorJoin();
            iOMapArticleColorJoin.saveMapArticleColorJoin(mj);                       
            
            jTable1.setRowSelectionInterval(h, h);            
        }
        
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:                
        model.sortABC();        
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        model.sortArticle();
    }//GEN-LAST:event_jButton11ActionPerformed

    //MapException
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        int h = jTable1.getSelectedRow();
        if(h == -1) return;        
        ArticleLoad articleLoad = model.getSelectArticleLoad((int)jTable1.getValueAt(h, 0));
        FMapExceptionArticle exceptionArticle = new FMapExceptionArticle(null, true);
        exceptionArticle.setString1C(articleLoad.getArticle(), articleLoad.getColor(), articleLoad.getSizes_1c());
        exceptionArticle.setVisible(true);     
        if(exceptionArticle.isResult()){
            model.updateArticle(h, exceptionArticle.getMapExceptionArticle().getModel());
            model.updateColor(h, exceptionArticle.getMapExceptionArticle().getColor());
            model.updateRazmeri(h, exceptionArticle.getMapExceptionArticle().getRazmeri().getRazmeri(), exceptionArticle.getMapExceptionArticle().getRazmeri().getName());
        }
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private final DefaultTableCellRenderer jTableRenderer1 = new DefaultTableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel cell = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            cell.setHorizontalAlignment(JLabel.RIGHT);
            return cell;
        }

    };
    
    
    /*private final DefaultTableCellRenderer jTableRenderer1 = new DefaultTableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel cell = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            cell.setHorizontalAlignment(JLabel.RIGHT);
            return cell;
        }

    };*/
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExecuteLoadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExecuteLoadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExecuteLoadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExecuteLoadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            ExecuteLoadFile dialog = new ExecuteLoadFile(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
