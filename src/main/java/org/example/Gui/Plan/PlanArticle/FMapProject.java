/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.example.Gui.Plan.PlanArticle;

import org.example.Gui.Plan.PlanArticle.Model.ModelMapProjectJournal;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.example.logic.plan.MapProject;
import org.example.logic.plan.MapProjectJournal;
import org.apache.log4j.Logger;
import org.example.util.IOZadachaKomplektovka;
import org.example.util.plannew.IOMapProject;
import org.example.util.plannew.IOMapProjectJournal;

/**
 *
 * @author ivan
 */
public class FMapProject extends javax.swing.JDialog {

    /**
     * Creates new form FMapProject
     * @param parent
     * @param modal
     * @param mp
     */
    public FMapProject(java.awt.Frame parent, boolean modal, int mp) {
        super(parent, modal);
        initComponents();
        mapProject = new MapProject(mp);
        jLabel4.setText("");
    }

    
    private boolean result = false;
    MapProject mapProject;

   
    
    IOMapProject iomp = new IOMapProject();
    ModelMapProjectJournal model = new ModelMapProjectJournal();
    TableRowSorter<TableModel> sorter;
    
    private final Logger log = Logger.getLogger(FMapProject.class);
    
    
     public boolean isResult() {
        return result;
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jToolBar1 = new javax.swing.JToolBar();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jButton8 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Сезон работы");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Название");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Дата начала");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Сохранить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Отмена");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Дата окончания");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jDateChooser1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jDateChooser2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/add.png"))); // NOI18N
        jButton3.setText("Добавить");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/edit.png"))); // NOI18N
        jButton4.setText("Изменить");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/remove.png"))); // NOI18N
        jButton5.setText("Удалить");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/refresh.png"))); // NOI18N
        jButton6.setText("Обновить");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/redo.png"))); // NOI18N
        jButton7.setText("Продажи");
        jButton7.setToolTipText("Загрузить продажи из файла");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/warning.png"))); // NOI18N
        jButton12.setText("Excel");
        jButton12.setToolTipText("Выгрузка данных в excel");
        jButton12.setFocusable(false);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton12);
        jToolBar1.add(jSeparator1);

        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/pinion.png"))); // NOI18N
        jToggleButton1.setText("Артикул");
        jToggleButton1.setToolTipText("Сгруппировать по артикулам");
        jToggleButton1.setFocusable(false);
        jToggleButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton1);

        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/basket.png"))); // NOI18N
        jToggleButton2.setText("Цвет");
        jToggleButton2.setToolTipText("Сгруппировать данные по артикулам и цветам");
        jToggleButton2.setFocusable(false);
        jToggleButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton2);

        jToggleButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/catapult.png"))); // NOI18N
        jToggleButton3.setText("Данные");
        jToggleButton3.setToolTipText("Показать поля продажи/остаки/в работе");
        jToggleButton3.setFocusable(false);
        jToggleButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton3);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/Filled.png"))); // NOI18N
        jButton8.setText("В работе");
        jButton8.setToolTipText("Загрузить данные по атикулам в работе");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton8);
        jToolBar1.add(jSeparator2);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/money.png"))); // NOI18N
        jButton9.setText("ABC");
        jButton9.setToolTipText("Сортировка по ABC");
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton9);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/preferences.png"))); // NOI18N
        jButton10.setText("Артикул");
        jButton10.setToolTipText("Сортировка по артикулу");
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton10);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/filter.png"))); // NOI18N
        jButton11.setText("Фильтр");
        jButton11.setToolTipText("Фильтр по выделенным");
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton11);

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/example/images/Pen.png"))); // NOI18N
        jButton13.setText("Полотна");
        jButton13.setFocusable(false);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton13);
        jToolBar1.add(jSeparator3);

        jLabel4.setText("jLabel4");
        jToolBar1.add(jLabel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jButton2)
                        .addComponent(jLabel3))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(26);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTable1ComponentResized(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentResized
        // TODO add your handling code here:
         if(jTable1.getColumnCount()<=0)
            return;
        int h = (jTable1.getWidth()- (jToggleButton3.isSelected()? 670 : 350 ) )/2;
        
        //System.out.println("-->" + h);
        
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);  
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(h);  
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(h);          
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);          
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(100); 
        
        if(jToggleButton3.isSelected()){
            for (int i = 6; i < 10; i++) {
                jTable1.getColumnModel().getColumn(i).setPreferredWidth(80);
                jTable1.getColumnModel().getColumn(i).setMaxWidth(80);
                jTable1.getColumnModel().getColumn(i).setMinWidth(80);
            }
        } else{

            for (int i = 6; i < 10; i++) {
                jTable1.getColumnModel().getColumn(i).setPreferredWidth(0);
                jTable1.getColumnModel().getColumn(i).setMaxWidth(0);
                jTable1.getColumnModel().getColumn(i).setMinWidth(0);
            }
        }     
        
        
        jTable1.getColumnModel().getColumn(10).setPreferredWidth(120);     
        
    }//GEN-LAST:event_jTable1ComponentResized

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if(mapProject.getMapproject()!=0){
            mapProject = iomp.getObject(mapProject.getMapproject());
            jTextField1.setText(mapProject.getName());
            jDateChooser1.setDate(mapProject.getStart_date());
            jDateChooser2.setDate(mapProject.getEnd_date());            
            model.setData(mapProject.getMapproject(), jToggleButton1.isSelected(), jToggleButton2.isSelected());
        } else {
            jDateChooser1.setDate(new Date());
            jDateChooser2.setDate(new Date());      
            mapProject.setStatus(0);
        }
        
        int w = Toolkit.getDefaultToolkit ().getScreenSize().width-20;
        int h = Toolkit.getDefaultToolkit ().getScreenSize().height-100;
        setSize(w,h);              
        setLocationRelativeTo(null);
        
        
        jTable1.setModel(model);
        sorter = new TableRowSorter<>(model);        
        jTable1.setRowSorter(sorter);
        jTable1.setShowGrid(true);
        jTable1.getTableHeader().setReorderingAllowed(false);        
        jTable1ComponentResized(null);
        jTable1.requestFocusInWindow();        
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText() == null && jTextField1.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Введите название!");
            return;
        }
        mapProject.setName(jTextField1.getText());        
        mapProject.setEnd_date(jDateChooser2.getDate());
        mapProject.setStart_date(jDateChooser1.getDate());
        
        int st = mapProject.getMapproject();
        mapProject = iomp.setObject(mapProject);
        if(st!=0){
            result = true;
            setVisible(false);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(mapProject.getMapproject()==0)
            return;
        FMapProjectJournal fMapProjectJournal = new FMapProjectJournal(null, true, 0, mapProject.getMapproject());
        fMapProjectJournal.setVisible(true);
        if(fMapProjectJournal.getResult()){
            model.setData(mapProject.getMapproject(), jToggleButton1.isSelected(), jToggleButton2.isSelected());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * Изменить
     * @param evt 
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(jToggleButton1.isSelected()) return;
        if(mapProject.getMapproject()==0)
            return;
        int h = jTable1.getSelectedRow();
        if(h==-1) return;                
        FMapProjectJournal fMapProjectJournal = new FMapProjectJournal(null, true, (int)jTable1.getValueAt(h, 0), mapProject.getMapproject());
        fMapProjectJournal.setVisible(true);
        if(fMapProjectJournal.getResult()){
            model.setData(mapProject.getMapproject(), jToggleButton1.isSelected(), jToggleButton2.isSelected());
            jTable1.setRowSelectionInterval(h, h);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        if(jToggleButton2.isSelected())
            jToggleButton2.setSelected(false);
        model.setData(mapProject.getMapproject(), jToggleButton1.isSelected(), jToggleButton2.isSelected());
        model.setEdit( (jToggleButton1.isSelected() == jToggleButton2.isSelected())?!jToggleButton1.isSelected():false);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(jToggleButton1.isSelected()) return;
        int h = jTable1.getSelectedRow();
        if(h==-1) return;        
        if (JOptionPane.showConfirmDialog(null, "Вы действительно хотите удалить <" + jTable1.getValueAt(h, 2) + "  " + jTable1.getValueAt(h, 3) + " " + jTable1.getValueAt(h, 4) + ">?", "Вопрос.", JOptionPane.YES_NO_OPTION) == 0) 
        {
            IOMapProjectJournal iOMapProjectJournal = new IOMapProjectJournal();
            if(iOMapProjectJournal.delObject((int)jTable1.getValueAt(h, 0)))
                model.setData(mapProject.getMapproject(), jToggleButton1.isSelected(), jToggleButton2.isSelected());
            else
                JOptionPane.showMessageDialog(null, "Ошибка удаления");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        model.setData(mapProject.getMapproject(), jToggleButton1.isSelected(), jToggleButton2.isSelected());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
         
        if(mapProject.getMapproject() == 0){
            JOptionPane.showMessageDialog(null, "Для загрузки сохраните план!");
            return;
        }
            
        JFileChooser fileChooser = new JFileChooser();
        if(fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
            ExecuteLoadFile executeLoadFile = new ExecuteLoadFile(null, true);
            if(executeLoadFile.loadSaleFile(fileChooser.getSelectedFile().getAbsolutePath())){
                 executeLoadFile.setVisible(true);            
                 //если принимаем данные
                 if(executeLoadFile.isResult()){
                     List<MapProjectJournal> mj =  executeLoadFile.getListArticleLoad()
                             .stream()
                             .filter(t->{
                                 if(t.getCheck() != 1) return false;
                                 if(t.getSizes_tid() == 0) return false;
                                 if(t.getColor_id() == 0) return false;
                                     return t.getModel_id() != 0;
                             })
                             .distinct()
                             .map(t->{
                                 int qty = t.getSale()-t.getIn_work()-t.getBalance();
                                 qty = qty<0?0:qty;
                                 
                                 //System.out.println("->" + t.toString());
                                 
                                 return new MapProjectJournal(0, mapProject.getMapproject(), 
                                         t.getModel_id(), 
                                         t.getColor_id(), 
                                         qty, 
                                         jDateChooser1.getDate(), 
                                         0, 
                                         t.getBalance(), 
                                         t.getSale(), 
                                         t.getIn_work(), 
                                         t.getSizes_tid(),
                                         t.getSumma_sale());
                             })
                             .collect(Collectors.toList());
                     IOMapProjectJournal iom = new IOMapProjectJournal();
                     
                     iom.saveListMapProjectJournal(mapProject.getMapproject(), mj);                     
                     model.setData(mapProject.getMapproject(), jToggleButton1.isSelected(), jToggleButton2.isSelected());
                 }
            }
        }
       
        
          

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            jButton4ActionPerformed(null);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        switch(evt.getKeyCode())
        {
            // удалить значение
            
            case KeyEvent.VK_ESCAPE:
            {
                jLabel4.setText("");                
                setFilter();
                break;
            }                  
            case KeyEvent.VK_BACK_SPACE:
            {
                jLabel4.setText(jLabel4.getText().substring(0, (jLabel4.getText().length()-1)>0?(jLabel4.getText().length()-1):0));                
                setFilter();
                break;
            }            
            default:
                if(String.valueOf(evt.getKeyChar()).matches("[A-Za-zА-Яа-я0-9/]"))                
                {
                    jLabel4.setText(jLabel4.getText()+evt.getKeyChar());
                    setFilter();                    
                }                 
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
        jTable1ComponentResized(null);
        int width = jToggleButton3.isSelected()?80:0;
        for (int i = 6; i < 10; i++) {
            jTable1.getColumnModel().getColumn(i).setPreferredWidth(width);
            jTable1.getColumnModel().getColumn(i).setMaxWidth(width);
            jTable1.getColumnModel().getColumn(i).setMinWidth(width);
        }
        jTable1.repaint();
        
        
        
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        if(mapProject.getMapproject() != 0 ){
            IOZadachaKomplektovka.updateFildInWorkForMapProject(mapProject.getMapproject());
            model.setData(mapProject.getMapproject(), jToggleButton1.isSelected(), jToggleButton2.isSelected());
        }        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        if(jToggleButton1.isSelected())
            jToggleButton1.setSelected(false);
        model.setData(mapProject.getMapproject(), jToggleButton1.isSelected(), jToggleButton2.isSelected());
        model.setEdit( (jToggleButton1.isSelected() == jToggleButton2.isSelected())?!jToggleButton1.isSelected():false);
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        model.sortABC();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        model.sortArticle();
    }//GEN-LAST:event_jButton10ActionPerformed

    boolean flag_select = true;
    // фильт по выделенным
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:м
        if (flag_select) {
            RowFilter<Object, Object> startsWithAFilter = new RowFilter<Object, Object>() {
                @Override
                public boolean include(Entry<? extends Object, ? extends Object> entry) {
                    for (int i = entry.getValueCount() - 1; i >= 0; i--) {
                        if (entry.getValue(i).equals(true)) {
                            return true;
                        }
                    }
                    return false;
                }
            };
            sorter.setRowFilter(startsWithAFilter);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?iu)"+jLabel4.getText(), 2));
        }
        flag_select = !flag_select;
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        
        if (model.getListMapJournal().isEmpty()) {
            return;
        }

        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {

            String saveFile = fileChooser.getSelectedFile().getAbsolutePath();

            try ( OutputStreamWriter outputStreamWriter = new OutputStreamWriter(new FileOutputStream(saveFile + ".csv"), "cp1251")) {

                outputStreamWriter.write("Артикул" + ";"
                        + "Цвет" + ";"
                        + "Размер" + ";"
                        + "План" + ";"
                        + "Расчет" + ";"
                        + "Продажи" + ";"
                        + "Остаток" + ";"
                        + "В работе" + ";"
                        + "Сумма продаж\n");

                long countSelect = model.getListMapJournal().stream()
                        .filter(t -> {
                            return t.getStatus() == 1;
                        })
                        .count();

                model.getListMapJournal().stream()
                        .filter(t -> {
                            if (countSelect == 0) {
                                return true;
                            }
                            return t.getStatus() == 1;
                        })
                        .forEach(t -> {
                            try {
                                outputStreamWriter.write(t.getArticle() + ";"
                                        + t.getColor() + ";"
                                        + t.getRazmer() + ";"
                                        + t.getQty() + ";"
                                        + t.getQtyCalculating() + ";"
                                        + t.getSale() + ";"
                                        + t.getBalance() + ";"
                                        + t.getInwork() + ";"
                                        + t.getSalemoney() + "\n");
                            } catch (IOException ex) {
                                log.error(ex);
                            }
                        });

            } catch (FileNotFoundException ex) {
                log.error(ex);
            } catch (UnsupportedEncodingException ex) {
                log.error(ex);
            } catch (IOException ex) {
                log.error(ex);
            }
        }
        /*
        try ( FileWriter fw = new FileWriter("d:\\22.csv")) {        
            
            
            
            fw.write("Артикул" + ";" + 
                                    "Цвет"+ ";" + 
                                    "Размер" + ";" + 
                                    "План" + ";" + 
                                    "Расчет" + ";" + 
                                    "Продажи" + ";" + 
                                    "Остаток" + ";" + 
                                    "В работе" + ";" + 
                                    "Сумма продаж\n");
            model.getListMapJournal().stream()
                   
                    .forEach(t -> {
                        try {
                            fw.write(t.getArticle() + ";" + 
                                    t.getColor() + ";" + 
                                    t.getRazmer() + ";" + 
                                    t.getQty() + ";" + 
                                    t.getQtyCalculating() + ";" + 
                                    t.getSale() + ";" + 
                                    t.getBalance() + ";" + 
                                    t.getInwork() + ";" + 
                                    t.getSalemoney() + "\n");
                        } catch (IOException ex) {
                            log.error(ex);
                        }
                    });
        } catch (IOException e) {
            log.error(e);
        }
        */
                
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        FMapProjectProduct fMapProjectProduct =new FMapProjectProduct(null, true, mapProject.getMapproject());
        fMapProjectProduct.setVisible(true);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void setFilter()
    {
        sorter.setRowFilter(RowFilter.regexFilter("(?iu)"+jLabel4.getText(), 2));
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FMapProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FMapProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FMapProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FMapProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            FMapProject dialog = new FMapProject(new javax.swing.JFrame(), true, 0);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
